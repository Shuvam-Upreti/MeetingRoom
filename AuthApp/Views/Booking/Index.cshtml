@using System.Security.Claims;
@model IEnumerable<MeetingRoom.Models.Booking>

@{
    ViewData["Title"] = "Index";
}
<partial name="_Notification" />
<h1>Bookings</h1>
@if (User.IsInRole("admin"))
{

    <p>
        <a class="btn btn-primary" asp-action="Create">Create New</a>
    </p>
}
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.First().Purpose)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().StartDateTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().EndDateTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().RoomId)
            </th>
            @if (User.IsInRole("admin"))
            {

                <th>
                    Participants
                </th>
            }
            <th></th>
        </tr>
    </thead>
    <tbody>
        @if (Model != null)
        {
            @if (User.IsInRole("admin"))
            {
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Purpose)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.StartDateTime)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.EndDateTime)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.RoomId)
                        </td>
                        <td>
                            <a class="btn btn-primary" asp-action="AddParticipants" asp-route-id="@item.BookingId">Add Participants</a>
                            <a class="btn btn-primary" asp-action="Edit" asp-route-id="@item.BookingId">Edit</a>
                            <a class="btn btn-danger" asp-action="Delete" asp-route-id="@item.BookingId">Delete</a>
                        </td>
                    </tr>
                }
            }
            @if (User.IsInRole("user"))
            {
                var userId = User.FindFirstValue(ClaimTypes.NameIdentifier); // Get the current user's ID
                var userBookings = Model.Where(item => item.UserId == userId); // Filter bookings by user ID
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Purpose)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.StartDateTime)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.EndDateTime)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.RoomId)
                        </td>

                    </tr>
                }
            }
        }
        else
        {
            <p>@Model is null.</p>
        }
    </tbody>
</table>
